apiVersion: v1
kind: Namespace
metadata:
  name: production
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
  namespace: production
data:
  PORT: "3000"
  DB_NAME: production
  DB_USER: postgres
  POSTGRES_DB: service-app
  POSTGRES_USER: rishi
  POSTGRES_PASSWORD: rishi@123
  DB_PASS: rishi@123
  DB_HOST: postgres-headless-svc.production.svc.cluster.local # <svc-name>.<namespace>.svc.cluster.local
  NODE_ENV: development
---
apiVersion: v1
kind: Secret
metadata:
  name: secret-map
  namespace: production
type: Opaque
data:
  POSTGRES_USER: cmlzaGk=                # rishi
  POSTGRES_PASSWORD: cmlzaGlAMTIz        # rishi@123
  PORT: NTAwMA==                         # 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: layout-react-app
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: layout-react-app
  template:
    metadata:
      labels:
        app: layout-react-app
    spec:
      containers:
        - name: layout-react-app
          image: rishirathoree/react-app:v1.1
          ports:
            - containerPort: 5173
          envFrom:
            - configMapRef:
                name: config-map
            - secretRef:
                name: secret-map
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
        - name: auth-service
          image: rishirathoree/auth-service:v1
          ports:
            - containerPort: 5000
          envFrom:
            - configMapRef:
                name: config-map
            - secretRef:
                name: secret-map
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
        - name: product-service
          image: rishirathoree/product-service:latest
          ports:
            - containerPort: 5001
          envFrom:
            - configMapRef:
                name: config-map
            - secretRef:
                name: secret-map
---
apiVersion: v1
kind: Service
metadata:
  name: layout-react-app
  namespace: production
spec:
  type: NodePort
  selector:
    app: layout-react-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5173
      nodePort: 30001
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: production
spec:
  type: NodePort
  selector:
    app: auth-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 30002
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: production
spec:
  type: NodePort
  selector:
    app: product-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5001
      nodePort: 30003
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-app
  labels:
    app: pv-app
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: slow
  hostPath:
    path: "/mnt/data"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-app
  namespace: production
spec:
  serviceName: postgres-headless-svc
  replicas: 1
  selector:
    matchLabels:
      app: postgres-app
  template:
    metadata:
      labels:
        app: postgres-app
    spec:
      containers:
        - name: postgres-app
          image: postgres:latest
          ports:
            - containerPort: 5432
              name: postgresql
          env:
            - name: POSTGRES_PASSWORD
              value: rishi@123
            - name: PGDATA
              value: /data/pgdata
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1"
  volumeClaimTemplates:
    - metadata:
        name: pv-app
        namespace: production
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: slow
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-headless-svc
  namespace: production
spec:
  clusterIP: None
  selector:
    app: postgres-app
  ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
      protocol: TCP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: postgres-app-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: postgres-app
  minReplicas: 1
  maxReplicas: 2 
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pg-app-ingress
  namespace: production
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /app
            pathType: Prefix
            backend:
              service:
                name: layout-react-app
                port:
                  number: 80
          - path: /auth
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 5000
          - path: /product
            pathType: Prefix
            backend:
              service:
                name: product-service
                port:
                  number: 5001

--- 
#run port forwarding using the command
# kubectl port-forward -n ingress-nginx 8080:80 svc/ingress-nginx-controller